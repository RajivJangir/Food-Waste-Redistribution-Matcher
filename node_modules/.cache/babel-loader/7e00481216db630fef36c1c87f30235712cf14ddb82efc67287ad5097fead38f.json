{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajiv\\\\OneDrive\\\\Desktop\\\\Projects\\\\Food Waste Redistribution Matcher\\\\foodsave-react\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\n\n// Database class to manage state\nclass Database {\n  constructor() {\n    this.KEY_LISTINGS = 'foodListings';\n    this.KEY_USERS = 'users';\n    this.KEY_STATS = 'stats';\n    this.KEY_CLAIMS = 'claims';\n    this.initializeData();\n  }\n  initializeData() {\n    // Initialize listings if not exists\n    if (!localStorage.getItem(this.KEY_LISTINGS)) {\n      const listings = [{\n        id: 1,\n        name: \"Fresh Vegetables\",\n        category: \"vegetables\",\n        quantity: \"25 kg\",\n        description: \"Assorted fresh vegetables including carrots, potatoes, and bell peppers.\",\n        expiry: new Date(Date.now() + 86400000).toISOString().split('T')[0],\n        location: \"Green Grocers, Downtown\",\n        donor: \"Green Grocers\",\n        available: true,\n        image: \"https://images.unsplash.com/photo-1542838132-92c53300491e?ixlib=rb-4.0.3&auto=format&fit=crop&w=1050&q=80\"\n      }, {\n        id: 2,\n        name: \"Bakery Items\",\n        category: \"bakery\",\n        quantity: \"50 units\",\n        description: \"Assorted bread, pastries, and muffins from today's baking.\",\n        expiry: new Date(Date.now() + 2 * 86400000).toISOString().split('T')[0],\n        location: \"City Bakery, West End\",\n        donor: \"City Bakery\",\n        available: true,\n        image: \"https://images.unsplash.com/photo-1509440159596-0249088772ff?ixlib=rb-4.0.3&auto=format&fit=crop&w=1052&q=80\"\n      }, {\n        id: 3,\n        name: \"Fresh Fruits\",\n        category: \"fruits\",\n        quantity: \"15 kg\",\n        description: \"Seasonal fruits including apples, bananas, and oranges.\",\n        expiry: new Date(Date.now() + 3 * 86400000).toISOString().split('T')[0],\n        location: \"Fresh Market, East Side\",\n        donor: \"Fresh Market\",\n        available: true,\n        image: \"https://images.unsplash.com/photo-1566385101042-1a0aa0c1268d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1050&q=80\"\n      }, {\n        id: 4,\n        name: \"Sandwiches & Wraps\",\n        category: \"prepared\",\n        quantity: \"35 units\",\n        description: \"Freshly prepared sandwiches and wraps from lunch service.\",\n        expiry: new Date(Date.now() + 86400000).toISOString().split('T')[0],\n        location: \"Cafe Central\",\n        donor: \"Cafe Central\",\n        available: true,\n        image: \"https://images.unsplash.com/photo-1568901346375-23c9450c58cd?ixlib=rb-4.0.3&auto=format&fit=crop&w=1050&q=80\"\n      }];\n      localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\n    }\n\n    // Initialize stats if not exists\n    if (!localStorage.getItem(this.KEY_STATS)) {\n      const stats = {\n        mealsSaved: 25680,\n        activeDonors: 142,\n        recipients: 65,\n        cities: 28,\n        totalDonations: 142,\n        mealsProvided: 25680,\n        co2Reduced: 42.5,\n        activeDrivers: 28,\n        routePickups: 4,\n        routeQuantity: \"85 kg\"\n      };\n      localStorage.setItem(this.KEY_STATS, JSON.stringify(stats));\n    }\n\n    // Initialize claims if not exists\n    if (!localStorage.getItem(this.KEY_CLAIMS)) {\n      localStorage.setItem(this.KEY_CLAIMS, JSON.stringify([]));\n    }\n  }\n  getListings() {\n    return JSON.parse(localStorage.getItem(this.KEY_LISTINGS)) || [];\n  }\n  saveListing(listing) {\n    const listings = this.getListings();\n    listing.id = listings.length > 0 ? Math.max(...listings.map(l => l.id)) + 1 : 1;\n    listing.available = true;\n    listings.push(listing);\n    localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\n    return listing;\n  }\n  updateListing(updatedListing) {\n    const listings = this.getListings();\n    const index = listings.findIndex(l => l.id === updatedListing.id);\n    if (index !== -1) {\n      listings[index] = updatedListing;\n      localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\n      return true;\n    }\n    return false;\n  }\n  getStats() {\n    return JSON.parse(localStorage.getItem(this.KEY_STATS)) || {};\n  }\n  updateStats(newStats) {\n    const stats = this.getStats();\n    const updatedStats = {\n      ...stats,\n      ...newStats\n    };\n    localStorage.setItem(this.KEY_STATS, JSON.stringify(updatedStats));\n    return updatedStats;\n  }\n  addClaim(claim) {\n    const claims = JSON.parse(localStorage.getItem(this.KEY_CLAIMS)) || [];\n    claim.id = claims.length > 0 ? Math.max(...claims.map(c => c.id)) + 1 : 1;\n    claims.push(claim);\n    localStorage.setItem(this.KEY_CLAIMS, JSON.stringify(claims));\n\n    // Update listing availability\n    const listings = this.getListings();\n    const listingIndex = listings.findIndex(l => l.id === claim.listingId);\n    if (listingIndex !== -1) {\n      listings[listingIndex].available = false;\n      localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\n    }\n    return claim;\n  }\n}\n\n// Action types\nconst ACTION_TYPES = {\n  LOAD_LISTINGS: 'LOAD_LISTINGS',\n  ADD_LISTING: 'ADD_LISTING',\n  UPDATE_LISTING: 'UPDATE_LISTING',\n  LOAD_STATS: 'LOAD_STATS',\n  UPDATE_STATS: 'UPDATE_STATS',\n  ADD_CLAIM: 'ADD_CLAIM',\n  SET_ACTIVE_FILTER: 'SET_ACTIVE_FILTER',\n  SHOW_MODAL: 'SHOW_MODAL',\n  HIDE_MODAL: 'HIDE_MODAL'\n};\n\n// Initial state\nconst initialState = {\n  listings: [],\n  stats: {},\n  claims: [],\n  activeFilter: 'all',\n  modals: {\n    login: false,\n    signup: false,\n    donate: false\n  },\n  currentUser: null\n};\n\n// Reducer\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case ACTION_TYPES.LOAD_LISTINGS:\n      return {\n        ...state,\n        listings: action.payload\n      };\n    case ACTION_TYPES.ADD_LISTING:\n      return {\n        ...state,\n        listings: [...state.listings, action.payload]\n      };\n    case ACTION_TYPES.UPDATE_LISTING:\n      return {\n        ...state,\n        listings: state.listings.map(listing => listing.id === action.payload.id ? action.payload : listing)\n      };\n    case ACTION_TYPES.LOAD_STATS:\n      return {\n        ...state,\n        stats: action.payload\n      };\n    case ACTION_TYPES.UPDATE_STATS:\n      return {\n        ...state,\n        stats: action.payload\n      };\n    case ACTION_TYPES.ADD_CLAIM:\n      return {\n        ...state,\n        claims: [...state.claims, action.payload],\n        listings: state.listings.map(listing => listing.id === action.payload.listingId ? {\n          ...listing,\n          available: false\n        } : listing)\n      };\n    case ACTION_TYPES.SET_ACTIVE_FILTER:\n      return {\n        ...state,\n        activeFilter: action.payload\n      };\n    case ACTION_TYPES.SHOW_MODAL:\n      return {\n        ...state,\n        modals: {\n          ...state.modals,\n          [action.payload]: true\n        }\n      };\n    case ACTION_TYPES.HIDE_MODAL:\n      return {\n        ...state,\n        modals: {\n          ...state.modals,\n          [action.payload]: false\n        }\n      };\n    default:\n      return state;\n  }\n}\n\n// Context Provider\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const db = new Database();\n\n  // Helper functions\n  const formatNumber = num => {\n    if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num;\n  };\n\n  // Actions\n  const actions = {\n    loadListings: () => {\n      const listings = db.getListings();\n      dispatch({\n        type: ACTION_TYPES.LOAD_LISTINGS,\n        payload: listings\n      });\n    },\n    addListing: listing => {\n      const newListing = db.saveListing(listing);\n      dispatch({\n        type: ACTION_TYPES.ADD_LISTING,\n        payload: newListing\n      });\n\n      // Update stats\n      const stats = db.getStats();\n      stats.totalDonations = (stats.totalDonations || 0) + 1;\n      const updatedStats = db.updateStats(stats);\n      dispatch({\n        type: ACTION_TYPES.UPDATE_STATS,\n        payload: updatedStats\n      });\n    },\n    updateListing: listing => {\n      if (db.updateListing(listing)) {\n        dispatch({\n          type: ACTION_TYPES.UPDATE_LISTING,\n          payload: listing\n        });\n      }\n    },\n    loadStats: () => {\n      const stats = db.getStats();\n      dispatch({\n        type: ACTION_TYPES.LOAD_STATS,\n        payload: stats\n      });\n    },\n    updateStats: newStats => {\n      const updatedStats = db.updateStats(newStats);\n      dispatch({\n        type: ACTION_TYPES.UPDATE_STATS,\n        payload: updatedStats\n      });\n    },\n    addClaim: claim => {\n      const newClaim = db.addClaim(claim);\n      dispatch({\n        type: ACTION_TYPES.ADD_CLAIM,\n        payload: newClaim\n      });\n\n      // Update stats\n      const stats = db.getStats();\n      stats.mealsProvided = (stats.mealsProvided || 0) + 100;\n      const updatedStats = db.updateStats(stats);\n      dispatch({\n        type: ACTION_TYPES.UPDATE_STATS,\n        payload: updatedStats\n      });\n    },\n    setActiveFilter: filter => {\n      dispatch({\n        type: ACTION_TYPES.SET_ACTIVE_FILTER,\n        payload: filter\n      });\n    },\n    showModal: modalName => {\n      dispatch({\n        type: ACTION_TYPES.SHOW_MODAL,\n        payload: modalName\n      });\n    },\n    hideModal: modalName => {\n      dispatch({\n        type: ACTION_TYPES.HIDE_MODAL,\n        payload: modalName\n      });\n    }\n  };\n  const value = {\n    ...state,\n    actions,\n    formatNumber\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","AppContext","Database","constructor","KEY_LISTINGS","KEY_USERS","KEY_STATS","KEY_CLAIMS","initializeData","localStorage","getItem","listings","id","name","category","quantity","description","expiry","Date","now","toISOString","split","location","donor","available","image","setItem","JSON","stringify","stats","mealsSaved","activeDonors","recipients","cities","totalDonations","mealsProvided","co2Reduced","activeDrivers","routePickups","routeQuantity","getListings","parse","saveListing","listing","length","Math","max","map","l","push","updateListing","updatedListing","index","findIndex","getStats","updateStats","newStats","updatedStats","addClaim","claim","claims","c","listingIndex","listingId","ACTION_TYPES","LOAD_LISTINGS","ADD_LISTING","UPDATE_LISTING","LOAD_STATS","UPDATE_STATS","ADD_CLAIM","SET_ACTIVE_FILTER","SHOW_MODAL","HIDE_MODAL","initialState","activeFilter","modals","login","signup","donate","currentUser","appReducer","state","action","type","payload","AppProvider","children","_s","dispatch","db","formatNumber","num","toFixed","actions","loadListings","addListing","newListing","loadStats","newClaim","setActiveFilter","filter","showModal","modalName","hideModal","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/rajiv/OneDrive/Desktop/Projects/Food Waste Redistribution Matcher/foodsave-react/src/context/AppContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\n// Database class to manage state\r\nclass Database {\r\n    constructor() {\r\n        this.KEY_LISTINGS = 'foodListings';\r\n        this.KEY_USERS = 'users';\r\n        this.KEY_STATS = 'stats';\r\n        this.KEY_CLAIMS = 'claims';\r\n        this.initializeData();\r\n    }\r\n    \r\n    initializeData() {\r\n        // Initialize listings if not exists\r\n        if (!localStorage.getItem(this.KEY_LISTINGS)) {\r\n            const listings = [\r\n                {\r\n                    id: 1,\r\n                    name: \"Fresh Vegetables\",\r\n                    category: \"vegetables\",\r\n                    quantity: \"25 kg\",\r\n                    description: \"Assorted fresh vegetables including carrots, potatoes, and bell peppers.\",\r\n                    expiry: new Date(Date.now() + 86400000).toISOString().split('T')[0],\r\n                    location: \"Green Grocers, Downtown\",\r\n                    donor: \"Green Grocers\",\r\n                    available: true,\r\n                    image: \"https://images.unsplash.com/photo-1542838132-92c53300491e?ixlib=rb-4.0.3&auto=format&fit=crop&w=1050&q=80\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"Bakery Items\",\r\n                    category: \"bakery\",\r\n                    quantity: \"50 units\",\r\n                    description: \"Assorted bread, pastries, and muffins from today's baking.\",\r\n                    expiry: new Date(Date.now() + 2 * 86400000).toISOString().split('T')[0],\r\n                    location: \"City Bakery, West End\",\r\n                    donor: \"City Bakery\",\r\n                    available: true,\r\n                    image: \"https://images.unsplash.com/photo-1509440159596-0249088772ff?ixlib=rb-4.0.3&auto=format&fit=crop&w=1052&q=80\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: \"Fresh Fruits\",\r\n                    category: \"fruits\",\r\n                    quantity: \"15 kg\",\r\n                    description: \"Seasonal fruits including apples, bananas, and oranges.\",\r\n                    expiry: new Date(Date.now() + 3 * 86400000).toISOString().split('T')[0],\r\n                    location: \"Fresh Market, East Side\",\r\n                    donor: \"Fresh Market\",\r\n                    available: true,\r\n                    image: \"https://images.unsplash.com/photo-1566385101042-1a0aa0c1268d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1050&q=80\"\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: \"Sandwiches & Wraps\",\r\n                    category: \"prepared\",\r\n                    quantity: \"35 units\",\r\n                    description: \"Freshly prepared sandwiches and wraps from lunch service.\",\r\n                    expiry: new Date(Date.now() + 86400000).toISOString().split('T')[0],\r\n                    location: \"Cafe Central\",\r\n                    donor: \"Cafe Central\",\r\n                    available: true,\r\n                    image: \"https://images.unsplash.com/photo-1568901346375-23c9450c58cd?ixlib=rb-4.0.3&auto=format&fit=crop&w=1050&q=80\"\r\n                }\r\n            ];\r\n            localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\r\n        }\r\n        \r\n        // Initialize stats if not exists\r\n        if (!localStorage.getItem(this.KEY_STATS)) {\r\n            const stats = {\r\n                mealsSaved: 25680,\r\n                activeDonors: 142,\r\n                recipients: 65,\r\n                cities: 28,\r\n                totalDonations: 142,\r\n                mealsProvided: 25680,\r\n                co2Reduced: 42.5,\r\n                activeDrivers: 28,\r\n                routePickups: 4,\r\n                routeQuantity: \"85 kg\"\r\n            };\r\n            localStorage.setItem(this.KEY_STATS, JSON.stringify(stats));\r\n        }\r\n        \r\n        // Initialize claims if not exists\r\n        if (!localStorage.getItem(this.KEY_CLAIMS)) {\r\n            localStorage.setItem(this.KEY_CLAIMS, JSON.stringify([]));\r\n        }\r\n    }\r\n    \r\n    getListings() {\r\n        return JSON.parse(localStorage.getItem(this.KEY_LISTINGS)) || [];\r\n    }\r\n    \r\n    saveListing(listing) {\r\n        const listings = this.getListings();\r\n        listing.id = listings.length > 0 ? Math.max(...listings.map(l => l.id)) + 1 : 1;\r\n        listing.available = true;\r\n        listings.push(listing);\r\n        localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\r\n        return listing;\r\n    }\r\n    \r\n    updateListing(updatedListing) {\r\n        const listings = this.getListings();\r\n        const index = listings.findIndex(l => l.id === updatedListing.id);\r\n        if (index !== -1) {\r\n            listings[index] = updatedListing;\r\n            localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    getStats() {\r\n        return JSON.parse(localStorage.getItem(this.KEY_STATS)) || {};\r\n    }\r\n    \r\n    updateStats(newStats) {\r\n        const stats = this.getStats();\r\n        const updatedStats = {...stats, ...newStats};\r\n        localStorage.setItem(this.KEY_STATS, JSON.stringify(updatedStats));\r\n        return updatedStats;\r\n    }\r\n    \r\n    addClaim(claim) {\r\n        const claims = JSON.parse(localStorage.getItem(this.KEY_CLAIMS)) || [];\r\n        claim.id = claims.length > 0 ? Math.max(...claims.map(c => c.id)) + 1 : 1;\r\n        claims.push(claim);\r\n        localStorage.setItem(this.KEY_CLAIMS, JSON.stringify(claims));\r\n        \r\n        // Update listing availability\r\n        const listings = this.getListings();\r\n        const listingIndex = listings.findIndex(l => l.id === claim.listingId);\r\n        if (listingIndex !== -1) {\r\n            listings[listingIndex].available = false;\r\n            localStorage.setItem(this.KEY_LISTINGS, JSON.stringify(listings));\r\n        }\r\n        \r\n        return claim;\r\n    }\r\n}\r\n\r\n// Action types\r\nconst ACTION_TYPES = {\r\n    LOAD_LISTINGS: 'LOAD_LISTINGS',\r\n    ADD_LISTING: 'ADD_LISTING',\r\n    UPDATE_LISTING: 'UPDATE_LISTING',\r\n    LOAD_STATS: 'LOAD_STATS',\r\n    UPDATE_STATS: 'UPDATE_STATS',\r\n    ADD_CLAIM: 'ADD_CLAIM',\r\n    SET_ACTIVE_FILTER: 'SET_ACTIVE_FILTER',\r\n    SHOW_MODAL: 'SHOW_MODAL',\r\n    HIDE_MODAL: 'HIDE_MODAL'\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n    listings: [],\r\n    stats: {},\r\n    claims: [],\r\n    activeFilter: 'all',\r\n    modals: {\r\n        login: false,\r\n        signup: false,\r\n        donate: false\r\n    },\r\n    currentUser: null\r\n};\r\n\r\n// Reducer\r\nfunction appReducer(state, action) {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.LOAD_LISTINGS:\r\n            return {\r\n                ...state,\r\n                listings: action.payload\r\n            };\r\n        \r\n        case ACTION_TYPES.ADD_LISTING:\r\n            return {\r\n                ...state,\r\n                listings: [...state.listings, action.payload]\r\n            };\r\n        \r\n        case ACTION_TYPES.UPDATE_LISTING:\r\n            return {\r\n                ...state,\r\n                listings: state.listings.map(listing =>\r\n                    listing.id === action.payload.id ? action.payload : listing\r\n                )\r\n            };\r\n        \r\n        case ACTION_TYPES.LOAD_STATS:\r\n            return {\r\n                ...state,\r\n                stats: action.payload\r\n            };\r\n        \r\n        case ACTION_TYPES.UPDATE_STATS:\r\n            return {\r\n                ...state,\r\n                stats: action.payload\r\n            };\r\n        \r\n        case ACTION_TYPES.ADD_CLAIM:\r\n            return {\r\n                ...state,\r\n                claims: [...state.claims, action.payload],\r\n                listings: state.listings.map(listing =>\r\n                    listing.id === action.payload.listingId\r\n                        ? { ...listing, available: false }\r\n                        : listing\r\n                )\r\n            };\r\n        \r\n        case ACTION_TYPES.SET_ACTIVE_FILTER:\r\n            return {\r\n                ...state,\r\n                activeFilter: action.payload\r\n            };\r\n        \r\n        case ACTION_TYPES.SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modals: {\r\n                    ...state.modals,\r\n                    [action.payload]: true\r\n                }\r\n            };\r\n        \r\n        case ACTION_TYPES.HIDE_MODAL:\r\n            return {\r\n                ...state,\r\n                modals: {\r\n                    ...state.modals,\r\n                    [action.payload]: false\r\n                }\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Context Provider\r\nexport const AppProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n    const db = new Database();\r\n\r\n    // Helper functions\r\n    const formatNumber = (num) => {\r\n        if (num >= 1000) {\r\n            return (num / 1000).toFixed(1) + 'K';\r\n        }\r\n        return num;\r\n    };\r\n\r\n    // Actions\r\n    const actions = {\r\n        loadListings: () => {\r\n            const listings = db.getListings();\r\n            dispatch({ type: ACTION_TYPES.LOAD_LISTINGS, payload: listings });\r\n        },\r\n\r\n        addListing: (listing) => {\r\n            const newListing = db.saveListing(listing);\r\n            dispatch({ type: ACTION_TYPES.ADD_LISTING, payload: newListing });\r\n            \r\n            // Update stats\r\n            const stats = db.getStats();\r\n            stats.totalDonations = (stats.totalDonations || 0) + 1;\r\n            const updatedStats = db.updateStats(stats);\r\n            dispatch({ type: ACTION_TYPES.UPDATE_STATS, payload: updatedStats });\r\n        },\r\n\r\n        updateListing: (listing) => {\r\n            if (db.updateListing(listing)) {\r\n                dispatch({ type: ACTION_TYPES.UPDATE_LISTING, payload: listing });\r\n            }\r\n        },\r\n\r\n        loadStats: () => {\r\n            const stats = db.getStats();\r\n            dispatch({ type: ACTION_TYPES.LOAD_STATS, payload: stats });\r\n        },\r\n\r\n        updateStats: (newStats) => {\r\n            const updatedStats = db.updateStats(newStats);\r\n            dispatch({ type: ACTION_TYPES.UPDATE_STATS, payload: updatedStats });\r\n        },\r\n\r\n        addClaim: (claim) => {\r\n            const newClaim = db.addClaim(claim);\r\n            dispatch({ type: ACTION_TYPES.ADD_CLAIM, payload: newClaim });\r\n            \r\n            // Update stats\r\n            const stats = db.getStats();\r\n            stats.mealsProvided = (stats.mealsProvided || 0) + 100;\r\n            const updatedStats = db.updateStats(stats);\r\n            dispatch({ type: ACTION_TYPES.UPDATE_STATS, payload: updatedStats });\r\n        },\r\n\r\n        setActiveFilter: (filter) => {\r\n            dispatch({ type: ACTION_TYPES.SET_ACTIVE_FILTER, payload: filter });\r\n        },\r\n\r\n        showModal: (modalName) => {\r\n            dispatch({ type: ACTION_TYPES.SHOW_MODAL, payload: modalName });\r\n        },\r\n\r\n        hideModal: (modalName) => {\r\n            dispatch({ type: ACTION_TYPES.HIDE_MODAL, payload: modalName });\r\n        }\r\n    };\r\n\r\n    const value = {\r\n        ...state,\r\n        actions,\r\n        formatNumber\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider value={value}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAppContext = () => {\r\n    const context = useContext(AppContext);\r\n    if (!context) {\r\n        throw new Error('useAppContext must be used within an AppProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}